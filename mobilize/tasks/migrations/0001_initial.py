# Generated by Django 4.2 on 2025-06-16 13:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contacts", "0002_initial"),
        ("churches", "0001_initial"),
        ("admin_panel", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("due_date", models.DateField(blank=True, null=True)),
                ("due_time", models.CharField(blank=True, max_length=255, null=True)),
                ("due_time_details", models.TextField(blank=True, null=True)),
                (
                    "reminder_time",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "reminder_option",
                    models.CharField(
                        blank=True, default="none", max_length=255, null=True
                    ),
                ),
                (
                    "reminder_sent",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "priority",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="medium",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                        ],
                        default="pending",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                ("type", models.CharField(default="general", max_length=50)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("completed_date", models.DateTimeField(blank=True, null=True)),
                ("completion_notes", models.TextField(blank=True, null=True)),
                (
                    "google_calendar_event_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "google_calendar_sync_enabled",
                    models.BooleanField(blank=True, null=True),
                ),
                ("last_synced_at", models.DateTimeField(blank=True, null=True)),
                (
                    "recurring_pattern",
                    models.JSONField(
                        blank=True,
                        help_text="Defines the recurrence rule, e.g., weekly, monthly.",
                        null=True,
                    ),
                ),
                (
                    "is_recurring_template",
                    models.BooleanField(
                        default=False,
                        help_text="Is this the master template for a recurring task series?",
                    ),
                ),
                (
                    "recurrence_end_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the recurring series should end.",
                        null=True,
                    ),
                ),
                (
                    "next_occurrence_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="For template tasks, when the next occurrence should be generated.",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "church",
                    models.ForeignKey(
                        blank=True,
                        db_column="church_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="church_tasks",
                        to="churches.church",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        db_column="contact_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contact_tasks",
                        to="contacts.contact",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "office",
                    models.ForeignKey(
                        blank=True,
                        db_column="office_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tasks",
                        to="admin_panel.office",
                    ),
                ),
                (
                    "parent_task",
                    models.ForeignKey(
                        blank=True,
                        help_text="Link to the master recurring task if this is an occurrence.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="occurrences",
                        to="tasks.task",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        blank=True,
                        db_column="person_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="person_tasks",
                        to="contacts.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Task",
                "verbose_name_plural": "Tasks",
                "db_table": "tasks",
                "ordering": ["due_date", "priority"],
            },
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["due_date"], name="tasks_due_dat_0359a9_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["status"], name="tasks_status_031d4c_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["priority"], name="tasks_priorit_a9efa1_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["created_by"], name="tasks_created_816ff3_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["assigned_to"], name="tasks_assigne_00feb5_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["is_recurring_template", "next_occurrence_date"],
                name="tasks_is_recu_6e9728_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["status", "due_date"], name="tasks_status_6c0c5a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["assigned_to", "status"], name="tasks_assigne_801c9d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["created_by", "status"], name="tasks_created_87eaa0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["office", "status"], name="tasks_office__4bd2dd_idx"
            ),
        ),
    ]
