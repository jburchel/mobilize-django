# Generated by Django 4.2 on 2025-07-17 13:52

from django.db import migrations, connection


def create_missing_user_tables(apps, schema_editor):
    """Create missing user_groups and user_user_permissions tables."""
    with connection.cursor() as cursor:
        # Create users_groups table
        cursor.execute(
            """
            CREATE TABLE IF NOT EXISTS users_groups (
                id SERIAL PRIMARY KEY,
                user_id INTEGER NOT NULL,
                group_id INTEGER NOT NULL,
                CONSTRAINT users_groups_user_id_group_id_unique UNIQUE (user_id, group_id),
                CONSTRAINT users_groups_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                CONSTRAINT users_groups_group_id_fkey FOREIGN KEY (group_id) REFERENCES auth_group(id) ON DELETE CASCADE
            );
        """
        )

        # Create users_user_permissions table
        cursor.execute(
            """
            CREATE TABLE IF NOT EXISTS users_user_permissions (
                id SERIAL PRIMARY KEY,
                user_id INTEGER NOT NULL,
                permission_id INTEGER NOT NULL,
                CONSTRAINT users_user_permissions_user_id_permission_id_unique UNIQUE (user_id, permission_id),
                CONSTRAINT users_user_permissions_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                CONSTRAINT users_user_permissions_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES auth_permission(id) ON DELETE CASCADE
            );
        """
        )

        # Create indexes for better performance
        cursor.execute(
            """
            CREATE INDEX IF NOT EXISTS users_groups_user_id_idx ON users_groups(user_id);
        """
        )
        cursor.execute(
            """
            CREATE INDEX IF NOT EXISTS users_groups_group_id_idx ON users_groups(group_id);
        """
        )
        cursor.execute(
            """
            CREATE INDEX IF NOT EXISTS users_user_permissions_user_id_idx ON users_user_permissions(user_id);
        """
        )
        cursor.execute(
            """
            CREATE INDEX IF NOT EXISTS users_user_permissions_permission_id_idx ON users_user_permissions(permission_id);
        """
        )


def reverse_create_missing_user_tables(apps, schema_editor):
    """Drop the created tables."""
    with connection.cursor() as cursor:
        cursor.execute("DROP TABLE IF EXISTS users_groups CASCADE;")
        cursor.execute("DROP TABLE IF EXISTS users_user_permissions CASCADE;")


class Migration(migrations.Migration):

    dependencies = [
        ("authentication", "0003_create_person_records_for_existing_users"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.RunPython(
            create_missing_user_tables,
            reverse_create_missing_user_tables,
        ),
    ]
