# Generated by Django 4.2 on 2025-07-17 14:11

from django.db import migrations, connection


def fix_created_by_nullable(apps, schema_editor):
    """Make created_by_id column nullable to match Django model."""
    with connection.cursor() as cursor:
        # Check if created_by_id exists and is NOT NULL
        cursor.execute(
            """
            SELECT is_nullable
            FROM information_schema.columns
            WHERE table_name='email_templates' AND table_schema='public'
            AND column_name = 'created_by_id';
        """
        )
        result = cursor.fetchone()

        if result and result[0] == "NO":
            # Make the column nullable
            cursor.execute(
                """
                ALTER TABLE email_templates
                ALTER COLUMN created_by_id DROP NOT NULL;
            """
            )
            print("Made created_by_id column nullable in email_templates table")
        else:
            print("created_by_id column is already nullable or doesn't exist")


def reverse_fix_created_by_nullable(apps, schema_editor):
    """Reverse the nullable fix."""
    with connection.cursor() as cursor:
        # Make the column NOT NULL again
        cursor.execute(
            """
            ALTER TABLE email_templates
            ALTER COLUMN created_by_id SET NOT NULL;
        """
        )


class Migration(migrations.Migration):

    dependencies = [
        ("communications", "0015_auto_20250717_1407"),
    ]

    operations = [
        migrations.RunPython(
            fix_created_by_nullable,
            reverse_fix_created_by_nullable,
        ),
    ]
