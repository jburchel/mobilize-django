# Generated by Django 4.2.16 on 2025-06-30 21:00

from django.db import migrations, models


def truncate_long_messages(apps, schema_editor):
    """Truncate messages longer than 1000 characters before altering the field"""
    Communication = apps.get_model('communications', 'Communication')
    db_alias = schema_editor.connection.alias
    
    # Find and truncate messages longer than 1000 characters
    long_messages = Communication.objects.using(db_alias).filter(
        message__isnull=False
    ).exclude(message='')
    
    for comm in long_messages:
        if comm.message and len(comm.message) > 1000:
            # Truncate to 997 characters and add "..."
            comm.message = comm.message[:997] + "..."
            comm.save(using=db_alias)


def reverse_truncate_messages(apps, schema_editor):
    """Reverse migration - can't restore truncated data"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('communications', '0008_fix_user_id_column_type'),
    ]

    operations = [
        # First, truncate any messages longer than 1000 characters
        migrations.RunPython(
            truncate_long_messages,
            reverse_truncate_messages,
        ),
        # Then alter the field
        migrations.AlterField(
            model_name='communication',
            name='message',
            field=models.CharField(blank=True, max_length=1000, null=True),
        ),
    ]