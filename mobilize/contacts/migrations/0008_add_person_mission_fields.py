# Generated by Django 4.2 on 2025-06-27 17:12

from django.db import migrations, models
from django.db import connection


def check_column_exists(table_name, column_name):
    """Check if a column exists in the given table."""
    with connection.cursor() as cursor:
        cursor.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = %s AND column_name = %s
        """, [table_name, column_name])
        return cursor.fetchone() is not None


class SafeAddField(migrations.AddField):
    """Custom AddField operation that checks if column exists before adding."""
    
    def database_forwards(self, app_label, schema_editor, from_state, to_state):
        model = to_state.apps.get_model(app_label, self.model_name)
        # Get the column name - use db_column if set, otherwise use field name
        column_name = self.field.db_column or self.name
        if not check_column_exists(model._meta.db_table, column_name):
            super().database_forwards(app_label, schema_editor, from_state, to_state)
        else:
            # Column already exists, skip the operation
            pass


class Migration(migrations.Migration):

    dependencies = [
        ("contacts", "0007_add_marital_status_choices"),
    ]

    operations = [
        SafeAddField(
            model_name="person",
            name="desired_service",
            field=models.TextField(
                blank=True, help_text="Desired service location or type", null=True
            ),
        ),
        SafeAddField(
            model_name="person",
            name="info_given",
            field=models.TextField(
                blank=True,
                help_text="Information about mission/vision shared",
                null=True,
            ),
        ),
    ]
